import pygame
import random
import math
from pygame import mixer

# intialize the pygame
pygame.init()
# create the screen
screen = pygame.display.set_mode((800, 600))
pygame.display.set_caption("spaceship")
icon = pygame.image.load('pace.png')
pygame.display.set_icon(icon)
background = pygame.image.load('background.png')
# background music
mixer.music.load('background.wav')
mixer.music.play(-1)
# player
playerimg = pygame.image.load('spaceship.png')
playerx = 370  # x axis
playery = 400  # y axis
player_change = 0
# enemy
enemyimg = []
enemyx = []
enemyy = []
enemyx_change = []
enemyy_change = []
num_of_enemies = 5
for i in range(num_of_enemies):
    enemyimg.append(pygame.image.load('enemy.png'))
    enemyx.append(random.randint(0, 735))
    enemyy.append(random.randint(0, 300))
    enemyx_change.append(4)
    enemyy_change.append(40)
# bullet
# 1]ready state=bullet is not on the screen
# 2] the bullet is currently moving
bulletimg=[]
bulletx=[]
bullety=[]
bullety_change=[]
bullet_state=[]
for i in range(3):
    bulletimg.append(pygame.image.load('bullet1.png'))
    bulletx.append(0)
    bullety.append(400)
    bullety_change.append(10)
    bullet_state.append("ready")
# score
score_value = 0
font = pygame.font.Font('freesansbold.ttf', 32)
testx = 10
testy = 10
# game_over_text
over_font = pygame.font.Font('freesansbold.ttf', 84)


def show_score(x, y):
    score = font.render("score:" + str(score_value), True, (255, 255, 255))
    screen.blit(score, (x, y))


def player(x, y):
    screen.blit(playerimg, (x, y))


def enemy(x, y, i):
    screen.blit(enemyimg[i], (x, y))


def fire_bullet(x, y,j):
    global bullet_state
    bullet_state[j] = "fired"
    screen.blit(bulletimg[j], (x, y + 20))


def game_over_text():
    over_text = font.render('GAME OVER', True, (255, 255, 255))
    screen.blit(over_text, (300, 300))


def iscollision(enemyx, enemyy, bulletx, bullety):
    distance = math.sqrt(math.pow(enemyx - bulletx, 2) + math.pow(enemyy - bullety, 2))
    if distance <= 27:
        return True
    else:
        return False


# game loop
running = True
while running:
    screen.fill((0, 0, 0))
    screen.blit(background, (0, 0))
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        # to listen left\right key pressed
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_LEFT:
                player_change = -5
            if event.key == pygame.K_RIGHT:
                player_change = 5
            if event.key == pygame.K_SPACE:
                if bullet_state is "ready":
                    bullet_sound = mixer.Sound('laser.wav')
                    bullet_sound.play()
                    bulletx = playerx
                    fire_bullet(bulletx, bullety)

        if event.type == pygame.KEYUP:
            if event.key == pygame.K_LEFT or pygame.K_RIGHT:
                player_change = 0

    # boundary for player movement
    playerx += player_change
    if playerx < 0:
        playerx = 0
    elif playerx >= 736:
        playerx = 736
    player(playerx, playery)
    # enemy
    for i in range(num_of_enemies):
        # game over
        if enemyy[i] > 500:
            for j in range(num_of_enemies):
                enemyy[j] = 2000
            game_over_text()
            break
        enemyx[i] += enemyx_change[i]
        if enemyx[i] < 0:
            enemyx_change[i] = 4
            enemyy[i] += enemyy_change[i]
        elif enemyx[i] >= 736:
            enemyx_change[i] = -4
            enemyy[i] += enemyy_change[i]
            # collision
            for j in range(3):
                collision = iscollision(enemyx[i], enemyy[i], bulletx[j], bullety[j])
                if collision:
                    explosion_sound = mixer.Sound('explosion.wav')
                    explosion_sound.play()
                    bullety = 400
                    bullet_state = "ready"
                    score_value += 1
                if bullet_state[j] is 'fired':
                    fire_bullet(bulletx[j], bullety[j],j)
                    bullety[j] -= bullety_change[j]
                if bullety[j] <= 0:
                    bullety[j] = 400
                    bullet_state[j] = "ready"

            enemyx[i] = random.randint(0, 800)
            enemyy[i] = random.randint(0, 300)
        enemy(enemyx[i], enemyy[i], i)
    show_score(testx, testy)
    pygame.display.update()

